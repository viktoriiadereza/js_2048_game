{"mappings":"C,A,WOAA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,AAAA,SCJmB,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AAAA,SGNZ,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AAAA,SKJ3B,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AAAA,WILtG,MAAM,AAAI,UAAU,uIACxB,GJKA,CJJA,IAAM,EAAO,GCDP,WAAA,EAAN,CAAA,eESoC,EFT9B,SAAA,IAEF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAI,CACF,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EAPC,AAAA,SCFqB,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDAM,IAAA,CAAA,GASF,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,gBAAgB,CAAG,EAAE,GAAG,CAAC,SAAC,CAA/B,EAAwC,OAAA,AAAA,EAAG,E,GAC3C,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EACjD,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,KAAK,CAAG,CAAA,C,CAdX,OES8B,EFT9B,C,CAiBJ,IAAA,YAAA,MAAA,SAAU,CAAK,EACb,OAAO,EAAM,GAAG,CAAC,SAAC,CAAlB,EAA2B,OAAA,AAAA,EAAG,E,EAChC,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAIf,IAAM,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAAyC,OAAA,EAAK,UAAU,CAAC,E,GAEzD,IAAI,CAAC,UAAU,CAAC,GAClB,C,E,CAEA,IAAA,YAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAIf,IAAM,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAAyC,OAAA,EAAK,eAAe,CAAC,E,GAE9D,IAAI,CAAC,UAAU,CAAC,GAClB,C,E,CAEA,IAAA,SAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAKf,IAAM,EAAW,AADO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAChB,GAAG,CAAC,SAAC,CAAtC,EAA8C,OAAA,EAAK,UAAU,CAAC,E,GAE9D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IACjC,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAKf,IAAM,EAAW,AADO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAChB,GAAG,CAAC,SAAC,CAAtC,EAA8C,OAAA,EAAK,eAAe,CAAC,E,GAEnE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IACjC,C,E,CAEA,IAAA,aAAA,MAAA,SAAW,CAAQ,EACb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAE,IAClC,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,aAAa,GAClB,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,aAAa,GAClB,IAAI,CAAC,KAAK,CAAG,CAAA,GAEb,IAAI,CAAC,KAAK,CAAG,CAAA,CAEjB,C,E,CAEA,IAAA,QAAA,MAAA,WACsB,SAAhB,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,MAAM,CAAG,UACd,IAAI,CAAC,aAAa,GAClB,IAAI,CAAC,aAAa,GAEtB,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EACjD,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,KAAK,CAAG,CAAA,EAEb,IAAM,EAAc,SAAS,aAAa,CAAC,iBAEvC,GACF,EAAY,SAAS,CAAC,GAAG,CAAC,SAE9B,C,E,CAEA,IAAA,gBAAA,MAAA,WAGE,IAAK,IAFC,EAAa,EAAE,CAEZ,EAAM,EAAG,EAAM,EAAG,IACzB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACI,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,EACtB,EAAW,IAAI,CAAC,CAAE,IAAA,EAAK,IAAA,CAAI,GAKjC,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,IACE,EAAA,CAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAAE,CADnD,EACN,EADM,GAAA,CAAK,EACX,EADW,GAAb,AAGA,CAAA,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,EACjD,IAAI,CAAC,WAAW,CAAC,EAAK,EACxB,CACF,C,E,CAEA,IAAA,aAAA,MAAA,SAAW,CAAG,EAGZ,IAAK,IAFC,EAAc,EAAI,MAAM,CAAC,SAAC,CAAhC,EAAyC,OAAA,AAAS,IAAT,C,GAEhC,EAAI,EAAG,EAAI,EAAY,MAAM,CAAG,EAAG,IACtC,CAAW,CAAC,EAAE,GAAK,CAAW,CAAC,EAAI,EAAE,GACvC,CAAW,CAAC,EAAE,EAAI,EAClB,IAAI,CAAC,KAAK,EAAI,CAAW,CAAC,EAAE,CAC5B,EAAY,MAAM,CAAC,EAAI,EAAG,IAI9B,KAAO,EAAY,MAAM,CAAG,GAC1B,EAAY,IAAI,CAAC,GAGnB,OAAO,CACT,C,E,CAEA,IAAA,kBAAA,MAAA,SAAgB,CAAG,EACjB,IAAM,EAAe,AAAA,EAAG,GAAK,OAAO,GAGpC,OAAO,AAFc,IAAI,CAAC,UAAU,CAAC,GAEjB,OAAO,EAC7B,C,E,CAEA,IAAA,gBAAA,MAAA,WACE,GAAI,CAAC,IAAI,CAAC,iBAAiB,GAAI,CAC7B,IAAI,CAAC,MAAM,CAAG,OAEd,IAAM,EAAc,SAAS,aAAa,CAAC,iBAEvC,GACF,EAAY,SAAS,CAAC,MAAM,CAAC,SAEjC,CACF,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,GAAI,AAAyB,OAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAW,CACjC,IAAI,CAAC,MAAM,CAAG,MAEd,IAAM,EAAa,SAAS,aAAa,CAAC,gBAEtC,GACF,EAAW,SAAS,CAAC,MAAM,CAAC,UAG9B,MACF,CAGN,C,E,CAEA,IAAA,oBAAA,MAAA,WACE,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,GAA6B,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,EAIpB,EAAM,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAM,EAAE,EAI5D,EAAM,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,GAAK,IAAI,CAAC,KAAK,CAAC,EAAM,EAAE,CAAC,EAAI,CAP9D,MAAO,CAAA,EAab,MAAO,CAAA,CACT,C,E,CAEA,IAAA,iBAAA,MAAA,SAAe,CAAQ,CAAE,CAAQ,EAC/B,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,IAAK,IAAI,EAAM,EAAG,EAAM,EAAG,IACzB,GAAI,CAAQ,CAAC,EAAI,CAAC,EAAI,GAAK,CAAQ,CAAC,EAAI,CAAC,EAAI,CAC3C,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,C,E,CAEA,IAAA,YAAA,MAAA,SAAU,CAAK,EACb,OAAO,CAAK,CAAC,EAAE,CAAC,GAAG,CAAC,SAAC,CAAA,CAAG,CAAxB,EAAqC,OAAA,EAAM,GAAG,CAAC,SAAC,CAAX,EAAmB,OAAA,CAAG,CAAC,EAAS,A,E,EACvE,C,E,CAEA,IAAA,cAAA,MAAA,SAAY,CAAG,CAAE,CAAG,EAClB,IAAM,EAAO,SAAS,aAAa,CACjC,wBAA0D,MAAA,CAAlC,EAAM,EAAE,4BAAkC,MAAA,CAAR,EAAM,EAAE,MAGhE,IACF,EAAK,SAAS,CAAC,GAAG,CAAC,YACnB,WAAW,WAAM,OAAA,EAAK,SAAS,CAAC,MAAM,CAAC,WAAa,EAAA,KAExD,C,E,CE1NkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFVhC,EEU4C,SAAS,CAAE,GFVvD,C,G,EDGN,SAAS,gBAAgB,CAAC,mBAAoB,WAqDnC,IAAA,EAAT,WACE,IAAM,EAAQ,EAAK,QAAQ,GAG3B,AAFc,SAAS,gBAAgB,CAAC,eAElC,OAAO,CAAC,SAAC,CAAA,CAAM,CAArB,EACE,IAEM,EAAQ,CAAK,CAFP,KAAK,KAAK,CAAC,EAAQ,GAEP,CADZ,EAAQ,EACS,AAE7B,CAAA,EAAK,SAAS,CAAG,aAEb,GACF,EAAK,SAAS,CAAC,GAAG,CAAE,eAAoB,MAAA,CAAN,IAClC,EAAK,WAAW,CAAG,GAEnB,EAAK,WAAW,CAAG,EAEvB,GAEA,SAAS,aAAa,CAAC,eAAe,WAAW,CAAG,EAAK,QAAQ,EACnE,EAxEM,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBAE3C,EAAY,gBAAgB,CAAC,QAAS,WAChC,AAAqB,YAArB,EAAK,SAAS,IAAoB,AAAqB,SAArB,EAAK,SAAS,IAClD,EAAK,OAAO,GAEZ,EAAY,WAAW,CAAG,QAC1B,EAAY,SAAS,CAAC,MAAM,CAAC,WAEzB,GACF,EAAa,SAAS,CAAC,MAAM,CAAC,YAGhC,EAAK,KAAK,GAEV,EAAY,WAAW,CAAG,UAC1B,EAAY,SAAS,CAAC,GAAG,CAAC,WAEtB,GACF,EAAa,SAAS,CAAC,GAAG,CAAC,WAI/B,GACF,GAEA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACE,GAAI,AAAqB,YAArB,EAAK,SAAS,IAIlB,OAAQ,EAAG,GAAG,EACZ,IAAK,YACH,EAAK,QAAQ,GACb,KACF,KAAK,aACH,EAAK,SAAS,GACd,KACF,KAAK,UACH,EAAK,MAAM,GACX,KACF,KAAK,YACH,EAAK,QAAQ,EAEjB,CAEI,EAAK,KAAK,EACZ,IAEJ,GAwBA,GACF,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = t;\n        this.copeInitialState = t.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.board = this.copyState(this.copeInitialState);\n        this.status = \"idle\";\n        this.score = 0;\n        this.moved = false;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"copyState\",\n            value: function copyState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                var newBoard = this.board.map(function(row) {\n                    return _this.processRow(row);\n                });\n                this.handleMove(newBoard);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                var newBoard = this.board.map(function(row) {\n                    return _this.processRowRight(row);\n                });\n                this.handleMove(newBoard);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                var transposedBoard = this.transpose(this.board);\n                var newBoard = transposedBoard.map(function(row) {\n                    return _this.processRow(row);\n                });\n                this.handleMove(this.transpose(newBoard));\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                var transposedBoard = this.transpose(this.board);\n                var newBoard = transposedBoard.map(function(row) {\n                    return _this.processRowRight(row);\n                });\n                this.handleMove(this.transpose(newBoard));\n            }\n        },\n        {\n            key: \"handleMove\",\n            value: function handleMove(newBoard) {\n                if (this.isBoardChanged(this.board, newBoard)) {\n                    this.board = newBoard;\n                    this.addRandomCell();\n                    this.checkWin();\n                    this.checkGameOver();\n                    this.moved = true;\n                } else this.moved = false;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.addRandomCell();\n                    this.addRandomCell();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = this.copyState(this.copeInitialState);\n                this.score = 0;\n                this.status = \"idle\";\n                this.moved = false;\n                var messageLose = document.querySelector(\".message-lose\");\n                if (messageLose) messageLose.classList.add(\"hidden\");\n            }\n        },\n        {\n            key: \"addRandomCell\",\n            value: function addRandomCell() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], row1 = _emptyCells_Math_floor.row, col1 = _emptyCells_Math_floor.col;\n                    this.board[row1][col1] = Math.random() < 0.1 ? 4 : 2;\n                    this.animateCell(row1, col1);\n                }\n            }\n        },\n        {\n            key: \"processRow\",\n            value: function processRow(row) {\n                var filteredRow = row.filter(function(cell) {\n                    return cell !== 0;\n                });\n                for(var i = 0; i < filteredRow.length - 1; i++)if (filteredRow[i] === filteredRow[i + 1]) {\n                    filteredRow[i] *= 2;\n                    this.score += filteredRow[i];\n                    filteredRow.splice(i + 1, 1);\n                }\n                while(filteredRow.length < 4)filteredRow.push(0);\n                return filteredRow;\n            }\n        },\n        {\n            key: \"processRowRight\",\n            value: function processRowRight(row) {\n                var reversedRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse();\n                var processedRow = this.processRow(reversedRow);\n                return processedRow.reverse();\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (!this.hasAvailableMoves()) {\n                    this.status = \"lose\";\n                    var messageLose = document.querySelector(\".message-lose\");\n                    if (messageLose) messageLose.classList.remove(\"hidden\");\n                }\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 2048) {\n                        this.status = \"win\";\n                        var messageWin = document.querySelector(\".message-win\");\n                        if (messageWin) messageWin.classList.remove(\"hidden\");\n                        return;\n                    }\n                }\n            }\n        },\n        {\n            key: \"hasAvailableMoves\",\n            value: function hasAvailableMoves() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] === 0) return true;\n                    if (col < 3 && this.board[row][col] === this.board[row][col + 1]) return true;\n                    if (row < 3 && this.board[row][col] === this.board[row + 1][col]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"isBoardChanged\",\n            value: function isBoardChanged(oldBoard, newBoard) {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (oldBoard[row][col] !== newBoard[row][col]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(board) {\n                return board[0].map(function(_, colIndex) {\n                    return board.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"animateCell\",\n            value: function animateCell(row, col) {\n                var cell = document.querySelector(\".field-row:nth-child(\".concat(row + 1, \") .field-cell:nth-child(\").concat(col + 1, \")\"));\n                if (cell) {\n                    cell.classList.add(\"new-cell\");\n                    setTimeout(function() {\n                        return cell.classList.remove(\"new-cell\");\n                    }, 500);\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var updateUI = function updateUI() {\n        var board = $197cd56b15c33885$var$game.getState();\n        var cells = document.querySelectorAll(\".field-cell\");\n        cells.forEach(function(cell, index) {\n            var row = Math.floor(index / 4);\n            var col = index % 4;\n            var value = board[row][col];\n            cell.className = \"field-cell\";\n            if (value) {\n                cell.classList.add(\"field-cell--\".concat(value));\n                cell.textContent = value;\n            } else cell.textContent = \"\";\n        });\n        document.querySelector(\".game-score\").textContent = $197cd56b15c33885$var$game.getScore();\n    };\n    var startMessage = document.querySelector(\".message-start\");\n    var startButton = document.querySelector(\".button.start\");\n    startButton.addEventListener(\"click\", function() {\n        if ($197cd56b15c33885$var$game.getStatus() === \"playing\" || $197cd56b15c33885$var$game.getStatus() === \"lose\") {\n            $197cd56b15c33885$var$game.restart();\n            startButton.textContent = \"Start\";\n            startButton.classList.remove(\"restart\");\n            if (startMessage) startMessage.classList.remove(\"hidden\");\n        } else {\n            $197cd56b15c33885$var$game.start();\n            startButton.textContent = \"Restart\";\n            startButton.classList.add(\"restart\");\n            if (startMessage) startMessage.classList.add(\"hidden\");\n        }\n        updateUI();\n    });\n    document.addEventListener(\"keydown\", function(ev) {\n        if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n        switch(ev.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        if ($197cd56b15c33885$var$game.moved) updateUI();\n    });\n    updateUI();\n});\n\n})();\n//# sourceMappingURL=index.5efc557e.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const startMessage = document.querySelector('.message-start');\n  const startButton = document.querySelector('.button.start');\n\n  startButton.addEventListener('click', () => {\n    if (game.getStatus() === 'playing' || game.getStatus() === 'lose') {\n      game.restart();\n\n      startButton.textContent = 'Start';\n      startButton.classList.remove('restart');\n\n      if (startMessage) {\n        startMessage.classList.remove('hidden');\n      }\n    } else {\n      game.start();\n\n      startButton.textContent = 'Restart';\n      startButton.classList.add('restart');\n\n      if (startMessage) {\n        startMessage.classList.add('hidden');\n      }\n    }\n\n    updateUI();\n  });\n\n  document.addEventListener('keydown', (ev) => {\n    if (game.getStatus() !== 'playing') {\n      return;\n    }\n\n    switch (ev.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    if (game.moved) {\n      updateUI();\n    }\n  });\n\n  function updateUI() {\n    const board = game.getState();\n    const cells = document.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, index) => {\n      const row = Math.floor(index / 4);\n      const col = index % 4;\n      const value = board[row][col];\n\n      cell.className = 'field-cell';\n\n      if (value) {\n        cell.classList.add(`field-cell--${value}`);\n        cell.textContent = value;\n      } else {\n        cell.textContent = '';\n      }\n    });\n\n    document.querySelector('.game-score').textContent = game.getScore();\n  }\n\n  updateUI();\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    t = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = t;\n    this.copeInitialState = t.map((row) => [...row]);\n    this.board = this.copyState(this.copeInitialState);\n    this.status = 'idle';\n    this.score = 0;\n    this.moved = false;\n  }\n\n  copyState(state) {\n    return state.map((row) => [...row]);\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const newBoard = this.board.map((row) => this.processRow(row));\n\n    this.handleMove(newBoard);\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const newBoard = this.board.map((row) => this.processRowRight(row));\n\n    this.handleMove(newBoard);\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const transposedBoard = this.transpose(this.board);\n    const newBoard = transposedBoard.map((row) => this.processRow(row));\n\n    this.handleMove(this.transpose(newBoard));\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const transposedBoard = this.transpose(this.board);\n    const newBoard = transposedBoard.map((row) => this.processRowRight(row));\n\n    this.handleMove(this.transpose(newBoard));\n  }\n\n  handleMove(newBoard) {\n    if (this.isBoardChanged(this.board, newBoard)) {\n      this.board = newBoard;\n      this.addRandomCell();\n      this.checkWin();\n      this.checkGameOver();\n      this.moved = true;\n    } else {\n      this.moved = false;\n    }\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.addRandomCell();\n      this.addRandomCell();\n    }\n  }\n\n  restart() {\n    this.board = this.copyState(this.copeInitialState);\n    this.score = 0;\n    this.status = 'idle';\n    this.moved = false;\n\n    const messageLose = document.querySelector('.message-lose');\n\n    if (messageLose) {\n      messageLose.classList.add('hidden');\n    }\n  }\n\n  addRandomCell() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { row, col } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[row][col] = Math.random() < 0.1 ? 4 : 2;\n      this.animateCell(row, col);\n    }\n  }\n\n  processRow(row) {\n    const filteredRow = row.filter((cell) => cell !== 0);\n\n    for (let i = 0; i < filteredRow.length - 1; i++) {\n      if (filteredRow[i] === filteredRow[i + 1]) {\n        filteredRow[i] *= 2;\n        this.score += filteredRow[i];\n        filteredRow.splice(i + 1, 1);\n      }\n    }\n\n    while (filteredRow.length < 4) {\n      filteredRow.push(0);\n    }\n\n    return filteredRow;\n  }\n\n  processRowRight(row) {\n    const reversedRow = [...row].reverse();\n    const processedRow = this.processRow(reversedRow);\n\n    return processedRow.reverse();\n  }\n\n  checkGameOver() {\n    if (!this.hasAvailableMoves()) {\n      this.status = 'lose';\n\n      const messageLose = document.querySelector('.message-lose');\n\n      if (messageLose) {\n        messageLose.classList.remove('hidden');\n      }\n    }\n  }\n\n  checkWin() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 2048) {\n          this.status = 'win';\n\n          const messageWin = document.querySelector('.message-win');\n\n          if (messageWin) {\n            messageWin.classList.remove('hidden');\n          }\n\n          return;\n        }\n      }\n    }\n  }\n\n  hasAvailableMoves() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          return true;\n        }\n\n        if (col < 3 && this.board[row][col] === this.board[row][col + 1]) {\n          return true;\n        }\n\n        if (row < 3 && this.board[row][col] === this.board[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  isBoardChanged(oldBoard, newBoard) {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (oldBoard[row][col] !== newBoard[row][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  transpose(board) {\n    return board[0].map((_, colIndex) => board.map((row) => row[colIndex]));\n  }\n\n  animateCell(row, col) {\n    const cell = document.querySelector(\n      `.field-row:nth-child(${row + 1}) .field-cell:nth-child(${col + 1})`,\n    );\n\n    if (cell) {\n      cell.classList.add('new-cell');\n      setTimeout(() => cell.classList.remove('new-cell'), 500);\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","t","arguments","instance","Constructor","initialState","copeInitialState","map","row","board","copyState","status","score","moved","key","value","state","_this","newBoard","processRow","handleMove","processRowRight","transposedBoard","transpose","isBoardChanged","addRandomCell","checkWin","checkGameOver","messageLose","document","querySelector","classList","add","emptyCells","col","push","_emptyCells_Math_floor","Math","floor","random","row1","col1","animateCell","filteredRow","filter","cell","splice","reversedRow","reverse","processedRow","hasAvailableMoves","remove","messageWin","oldBoard","_","colIndex","concat","setTimeout","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","addEventListener","updateUI","getState","cells","querySelectorAll","forEach","index","className","textContent","getScore","startMessage","startButton","getStatus","restart","start","ev","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.5efc557e.js.map"}